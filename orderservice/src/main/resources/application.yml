project:
  name: orderservice

server:
  port: 8086

spring:
  my:
   datasource:
      username: '@jdbc.name@'
      password: '@jdbc.password@'
      driver-class-name: com.mysql.cj.jdbc.Driver
      url: '@jdbc.url@'
      initial-size: 5
      max-active: 5
      max-wait: 6000
      min-idle: 5
      pool-prepared-statements: false
  redis:
    host: 127.0.0.1
    port: 6379
    timeout: 6000
    lettuce:
      pool:
        max-active: 8
        max-idle: 8
        min-idle: 8

mybatis:
  mapper-locations: classpath:mapper/*.xml
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl

logging:
  config: classpath:logback-spring.xml
  level:
    root: info
  file:
    path: ./log

dubbo:
  application:
    name: order-service-provider
  registry:
    address: '@dubbo.address@'
    register: true
    timeout: 10000
  protocol:
    name: dubbo
    ssl-enabled: false
    port: 20882
  scan:
    base-packages: com.xdsty.orderservice.service
  config-center:
    timeout: 6000
  provider:
    filter: dubboExceptionFilter,-exception


# 配置管理
nacos:
  config:
    server-addr: '@nacos.address@'

seata:
  service-group-name: tx-service-group

kafka:
  bootstrapServers: '@kafka.servers@'
  keySerializer: org.apache.kafka.common.serialization.StringSerializer
  valueSerializer: com.xdsty.orderservice.serializer.KafkaProtobufSerializer
  acks: 1
  blockOnBufferFull: true
  retries: 32